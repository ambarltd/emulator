#
# Build a statically-linked binary for Linux
#
FROM alpine:3.20

RUN apk update

# Compiler dependencies
RUN apk add \
    curl \
    binutils-gold \
    gcc \
    g++ \
    gmp-dev \
    libc-dev \
    libffi-dev \
    make \
    musl-dev \
    ncurses-dev \
    perl \
    pkgconfig \
    tar \
    xz

# Install compiler (GHC) and build system (cabal)
RUN curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | \
    BOOTSTRAP_HASKELL_NONINTERACTIVE=1 \
    BOOTSTRAP_HASKELL_GHC_VERSION="9.10.1" \
    BOOTSTRAP_HASKELL_CABAL_VERSION="3.10.3.0" \
    BOOTSTRAP_HASKELL_INSTALL_NO_STACK=1 \
    sh

# Add 'GHC' and 'cabal' to PATH
ENV PATH="/root/.ghcup/bin:$PATH"

# Library dependencies
RUN apk add \
    libxml2-static \
    lz4-static \
    ncurses-static \
    openssl-libs-static \
    readline-static \
    zlib-static \
    zstd-static \
    mariadb-static \
    pcre-dev \
    zlib-dev \
    mariadb-connector-c-dev \
    libpq-dev

WORKDIR /opt/emulator

# Add only the build files and build only the dependencies. Docker will cache
# this layer, freeing us up to modify source code without re-building the
# dependencies (unless the .cabal file changes)
COPY ./emulator.cabal       /opt/emulator
COPY ./cabal.project        /opt/emulator
COPY ./deps                 /opt/emulator/deps
RUN cabal build --dependencies-only +RTS -N

# Add and build application code.
# For maximum caching we only copy source code files.
COPY ./src          /opt/emulator/src
COPY ./tests        /opt/emulator/tests
COPY ./benchmarks   /opt/emulator/benchmarks
RUN cabal build \
    --enable-executable-static \
    --ghc-options='-optl-lpq -optl-lssl -optl-lcrypto -optl-lpgcommon -optl-lpgport -optl-lzstd -optl-llz4 -optl-lxml2 -optl-lssl -optl-lcrypto -optl-lz -optl-lreadline -optl-lm' \
    emulator

# Add executable to PATH as 'emulator'
RUN ln -s $(cabal list-bin emulator) /usr/local/bin/emulator

ENTRYPOINT ["emulator"]
